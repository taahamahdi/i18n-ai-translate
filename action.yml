name: i18n-ai-translate
description: Use ChatGPT or Google Gemini to automatically translate your i18n JSON on every PR
author: Taaha Mahdi

inputs:
  json-file-path:
    description: 'Path to the source i18n JSON file'
    required: true
  api-key:
    description: 'The API key'
    required: false
  host:
    description: "The ollama host and port number"
    required: false
  author-email:
    description: 'The email of the person to attribute the i18n change to'
    required: false
    default: 'tmahdi+i18n-ai-translate@proton.me'
  author-name:
    description: 'The name of the person to attribute the i18n change to'
    required: false
    default: 'Taaha Mahdi'
  language:
    description: 'Language to translate from'
    required: false
    default: 'English'
  engine:
    description: 'Engine to use for translation'
    required: false
    default: 'chatgpt'
  model:
    description: 'Model to use for the translation (e.g., gpt-4o, gpt-4, gpt-3.5-turbo, gemini-pro)'
    required: false
    default: 'gpt-4o'
  templated-string-prefix:
    description: 'Prefix for templated strings'
    required: false
    default: "{{"
  templated-string-suffix:
    description: 'Suffix for templated strings'
    required: false
    default: "}}"
  batch-size:
    description: 'How many keys to process at a time'
    required: false
    default: 32

runs:
  using: 'composite'
  steps:
    - name: Check out Repo
      uses: actions/checkout@v3
      with:
        # This references the head of the pull request
        ref: ${{ github.head_ref }}
        fetch-depth: 0

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install Dependencies
      run: |
        npx --yes i18n-ai-translate@latest
      shell: bash

    #
    # This step determines the base ref we should compare against.
    # Because environment variables don't persist across steps in composite actions,
    # we expose the base ref via step outputs.
    #
    - name: Determine base ref
      id: determine-base-ref
      shell: bash
      run: |
        # If this is a pull_request event:
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          echo "BASE_REF=${{ github.base_ref }}" >> $GITHUB_OUTPUT
          exit 0
        fi

        # If this is an issue_comment event on a pull request:
        if [ "${{ github.event_name }}" = "issue_comment" ] && [ -n "${{ github.event.issue.pull_request }}" ]; then
          PULL_NUMBER="${{ github.event.issue.number }}"
          REPO="${{ github.repository }}"
          PR_DATA=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$REPO/pulls/$PULL_NUMBER")

          base=$(echo "$PR_DATA" | jq -r .base.ref)
          echo "BASE_REF=$base" >> $GITHUB_OUTPUT
          exit 0
        fi

        # Fallback if not a known event; set to main or some default:
        echo "BASE_REF=main" >> $GITHUB_OUTPUT

    - name: Fetch original translation
      shell: bash
      run: |
        # Move the current JSON to a "latest" file
        mv "${{ inputs.json-file-path }}" "${{ inputs.json-file-path }}-latest"
        # Check out the old version from base ref
        git checkout origin/${{ steps.determine-base-ref.outputs.BASE_REF }} -- "${{ inputs.json-file-path }}"

    - name: Translate the diff
      shell: bash
      run: |
        # If an API key is provided, use that
        if [ -n "${{ inputs.api-key }}" ]; then
          npx i18n-ai-translate@latest diff \
            -b "${{ inputs.json-file-path }}" \
            -a "${{ inputs.json-file-path }}-latest" \
            -l "${{ inputs.language }}" \
            --verbose \
            --engine "${{ inputs.engine }}" \
            --model "${{ inputs.model }}" \
            -p "${{ inputs.templated-string-prefix }}" \
            -s "${{ inputs.templated-string-suffix }}" \
            -n "${{ inputs.batch-size }}" \
            -k "${{ inputs.api-key }}"
        # If a host is provided (ollama), use that
        elif [ -n "${{ inputs.host }}" ]; then
          npx i18n-ai-translate@latest diff \
            -b "${{ inputs.json-file-path }}" \
            -a "${{ inputs.json-file-path }}-latest" \
            -l "${{ inputs.language }}" \
            --verbose \
            --engine "${{ inputs.engine }}" \
            --model "${{ inputs.model }}" \
            -p "${{ inputs.templated-string-prefix }}" \
            -s "${{ inputs.templated-string-suffix }}" \
            -n "${{ inputs.batch-size }}" \
            -h "${{ inputs.host }}"
        else
          echo "No API key or host specified; skipping automatic translation."
        fi

    - name: Configure Git
      shell: bash
      run: |
        git config --global user.email "${{ inputs.author-email }}"
        git config --global user.name "${{ inputs.author-name }}"

    - name: Commit the difference
      shell: bash
      run: |
        # Restore the final file and commit if there are changes
        rm -r "${{ inputs.json-file-path }}"
        mv "${{ inputs.json-file-path }}-latest" "${{ inputs.json-file-path }}"
        git add --all
        git commit -m "Update translations" || echo "No changes to commit"
        git push
